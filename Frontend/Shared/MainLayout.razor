@inherits LayoutComponentBase

@inject SweetAlertService Swal;
@inject NavigationManager _navigationManager

@using Frontend.Extensiones;
@using Microsoft.AspNetCore.Components.Authorization;
@inject AuthenticationStateProvider autenticacionProvider
@inject NavigationManager navManager
@using System.Security.Claims;



<MudSnackbarProvider />
<MudThemeProvider />
<MudDialogProvider DisableBackdropClick="true"
                   Position="DialogPosition.Center" />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="0">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudSpacer />
        <AuthorizeView>
            <Authorized>
                <MudText>@context.User.Claims.Where(c => c.Type == ClaimTypes.Email).Select(c => c.Value).SingleOrDefault()</MudText>
            </Authorized>
        </AuthorizeView>

        <MudIconButton Icon="@Icons.Material.Filled.Logout" Color="Color.Inherit" OnClick="CerrarSesion" />
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" Elevation="1">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6">Sistema de Hotel</MudText>
        </MudDrawerHeader>
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        @Body
    </MudMainContent>
</MudLayout>


@*
<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
            <a href="https://docs.microsoft.com/aspnet/" target="_blank">About</a>
            <a @onclick="CerrarSesion" href="javascript:void(0)">Salir</a>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>*@


@code {
    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
    //private async Task CerrarSesion()
    //{
    //    var autenticacionExt = (AutenticacionExtension)autenticacionProvider;
    //    await autenticacionExt.ActualizarEstadoAutenticacion(null);
    //    navManager.NavigateTo("/", true);
    //}
    private async Task CerrarSesion()
    {
        SweetAlertResult result = await Swal.FireAsync(new SweetAlertOptions
            {
                Title = "Desea salir?",
                Icon = SweetAlertIcon.Info,
                ShowCancelButton = true,
                ConfirmButtonText = "Si",
                CancelButtonText = "No"
            });

        if (result.IsConfirmed)
        {
            var autenticacionExt = (AutenticacionExtension)autenticacionProvider;
            await autenticacionExt.ActualizarEstadoAutenticacion(null);
            _navigationManager.NavigateTo("/", true);
        }
    }
}
